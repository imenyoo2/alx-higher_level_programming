

first import the function:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

using the function:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

matrix must be a list of lists of int or float:
	>>> matrix = [[1, 2, 3], [4, "hello", 6]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, "", 3], [4, "hello", 6]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, [2, 3], 3], [4, "hello", 6]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix rows must be the same length:
	>>> matrix = [[1, 2, 3, 5], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

	>>> matrix = [[1, 2, 3], [4, 5, 6], []]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

div must be a number
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, "hello")
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, [1, 3])
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, (1,))
	Traceback (most recent call last):
		...
	TypeError: div must be a number

div must not equal zero:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

the function returns a new matrix
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix2 = matrix_divided(matrix, 3)
	>>> matrix2 is matrix
	False
